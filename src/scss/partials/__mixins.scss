@import "partials/__unit";
@import "partials/__breakpoint";

@mixin IE10and11 {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

// MIXIN: Animations
@mixin transform($rot, $scale1, $scale2) {
  -webkit-transform: rotate($rot) scale($scale1, $scale2);
      -ms-transform: rotate($rot) scale($scale1, $scale2);
          transform: rotate($rot) scale($scale1, $scale2);
}

@mixin keyframeAnimation($name, $duration, $count, $function) {
  -moz-animation: $name, $duration, $count, $function;
  -webkit-animation: $name, $duration, $count, $function;
  -ms-animation: $name, $duration, $count, $function;
  -o-animation: $name, $duration, $count, $function;
  animation: $name, $duration, $count, $function;
}

// MIXIN: Transition
@mixin transition($property, $duration, $timing-function, $delay) {
  -webkit-transition: $property $duration $timing-function $delay;
  -moz-transition: $property $duration $timing-function $delay;
  -o-transition: $property $duration $timing-function $delay;
  transition: $property $duration $timing-function $delay;
}

@mixin simpleTransition($transition...) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

// MIXIN: Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// MIXIN: Transform
@mixin transform($rot, $scale1, $scale2) {
  -webkit-transform: rotate($rot) scale($scale1, $scale2);
     -moz-transform: rotate($rot) scale($scale1, $scale2);
       -o-transform: rotate($rot) scale($scale1, $scale2);
      -ms-transform: rotate($rot) scale($scale1, $scale2);
          transform: rotate($rot) scale($scale1, $scale2);
}

// MIXIN: Transform: Scale
@mixin transform($scale1, $scale2) {
  -webkit-transform: scale($scale1, $scale2);
     -moz-transform: scale($scale1, $scale2);
       -o-transform: scale($scale1, $scale2);
      -ms-transform: scale($scale1, $scale2);
          transform: scale($scale1, $scale2);
}


// MIXIN: Transform Rotate
@mixin rotate($rot) {
  -webkit-transform: rotate($rot);
     -moz-transform: rotate($rot);
       -o-transform: rotate($rot);
      -ms-transform: rotate($rot);
          transform: rotate($rot);
}

/// Vertically centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin vertical-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/// Horizontally centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

/// Absolutely centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Static vertical align. May require height of 100% */
// Alternative: u-vertical-center-ouside/inside
// This mixin could cause blurry text since z-index is interfered. 
// Add persepctive to clear blurry effect
@mixin vertical-align($alignment: middle) { //may not work if content has float, 
  position: relative;
  display: block;
  @if $alignment == 'top'{
    top: 0;
    transform: translateY(0); //51 to fix blury pixel problem
  }
  @if $alignment == 'middle'{
    top: 50%;
    transform: translateY(-50%); //51 to fix blury pixel problem
  }
  @if $alignment == 'bottom'{
    top: 100%;
    transform: translateY(-100%);
  }
}

@mixin box-shadow($direction: 2px, $border: 3px, $opacity: 0.4) {
  box-shadow: 0 $direction $border rgba(0, 0, 0, $opacity);
}
@mixin shade($opacity: 0.55, $color: 0) {
  box-shadow: inset 0 0 0 1000px rgba($color,$color,$color, $opacity);
}


/* Clearfix */
@mixin clearfix {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}
